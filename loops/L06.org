#+TITLE: Pick the first hugo theme to use
#+LOOP_TYPE: WORK D --> Production code
#+STARTUP: showall

* DONE INTENT
CLOSED: [2022-02-05 za 04:38]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-02-05 za 04:38]
:END:
Get 0x1355 up and running, to get real with showing my work

* DONE EXPLORE -> Architecture
CLOSED: [2022-02-05 za 05:19]
:PROPERTIES:
:VISIBILITY: content
:END:
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-02-05 za 05:19]
:END:
** DONE How do I install hugo?
CLOSED: [2022-02-05 za 04:42]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-02-05 za 04:42]
- State "TODO"       from              [2022-02-05 za 04:38]
:END:
Standard install. Done
#+begin_src sh :session sh :results replace
hugo help
#+end_src

#+RESULTS:
#+begin_example

hugo is the main command, used to build your Hugo site.

Hugo is a Fast and Flexible Static Site Generator
built with love by spf13 and friends in Go.

Complete documentation is available at http://gohugo.io/.

Usage:
  hugo [flags]
  hugo [command]

Available Commands:
  completion  generate the autocompletion script for the specified shell
  config      Print the site configuration
  convert     Convert your content to different formats
  deploy      Deploy your site to a Cloud provider.
  env         Print Hugo version and environment info
  gen         A collection of several useful generators.
  help        Help about any command
  import      Import your site from others.
  list        Listing out various types of content
  mod         Various Hugo Modules helpers.
  new         Create new content for your site
  server      A high performance webserver
  version     Print the version number of Hugo

Flags:
  -b, --baseURL string             hostname (and path) to the root, e.g. http://spf13.com/
  -D, --buildDrafts                include content marked as draft
  -E, --buildExpired               include expired content
  -F, --buildFuture                include content with publishdate in the future
TMPDIR/hugo_cache/
      --cleanDestinationDir        remove files from destination not found in static directories
      --config string              config file (default is path/config.yaml|json|toml)
      --configDir string           config dir (default "config")
  -c, --contentDir string          filesystem path to content directory
      --debug                      debug output
  -d, --destination string         filesystem path to write files to
      --disableKinds strings       disable different kind of pages (home, RSS etc.)
      --enableGitInfo              add Git revision, date and author info to the pages
  -e, --environment string         build environment
      --forceSyncStatic            copy all files when static is changed.
      --gc                         enable to run some cleanup tasks (remove unused cache files) after the build
  -h, --help                       help for hugo
      --i18n-warnings              print missing translations
      --ignoreCache                ignores the cache directory
      --ignoreVendorPaths string   ignores any _vendor for module paths matching the given Glob pattern
  -l, --layoutDir string           filesystem path to layout directory
      --log                        enable Logging
      --logFile string             log File path (if set, logging enabled automatically)
      --minify                     minify any supported output format (HTML, XML etc.)
      --noChmod                    don't sync permission mode of files
      --noTimes                    don't sync modification time of files
      --panicOnWarning             panic on first WARNING log
      --path-warnings              print warnings on duplicate target paths etc.
      --poll string                set this to a poll interval, e.g --poll 700ms, to use a poll based approach to watch for file system changes
      --print-mem                  print memory usage to screen at intervals
      --quiet                      build in quiet mode
      --renderToMemory             render to memory (only useful for benchmark testing)
  -s, --source string              filesystem path to read files relative from
      --templateMetrics            display metrics about template executions
      --templateMetricsHints       calculate some improvement hints when combined with --templateMetrics
  -t, --theme strings              themes to use (located in /themes/THEMENAME/)
      --themesDir string           filesystem path to themes directory
      --trace file                 write trace to file (not useful in general)
  -v, --verbose                    verbose output
      --verboseLog                 verbose logging
  -w, --watch                      watch filesystem for changes and recreate as needed

Additional help topics:
  hugo check      Contains some verification checks

Use "hugo [command] --help" for more information about a command.
#+end_example
** DONE What is my Horizon for 0x1355.com?
CLOSED: [2022-02-05 za 05:12]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-02-05 za 05:12]
- State "TODO"       from              [2022-02-05 za 05:07]
:END:
I see that every week, I publish at least one new article on 0x1355.com.

My articles are short, easy to read, yet valuable. They are interconnected, much
like zettlekast notes. People start reading one and, before they know, are
reading the 10th article through discovery and exploration.

Content of my article will often include code snippets and graphs.

** DONE What characteristics do I want in the theme?
CLOSED: [2022-02-05 za 05:14]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-02-05 za 05:14]
- State "TODO"       from              [2022-02-05 za 05:08]
:END:
In order of importance:

1. Good enough out of the box for the first 12 articles
2. Easy to publish new artile without having to think about structure --> No doc
   type 
3. Works well with code snippets and syntax highlighting
4. Works well with all kinds of graphs
5. Works well with discovery through highly visible interlinks
   
** DONE Which theme looks good enough to try first?
CLOSED: [2022-02-05 za 05:17]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-02-05 za 05:17]
- State "TODO"       from              [2022-02-05 za 04:37]
:END:
hello friend

hello-friend


* DONE CRAFT --> Writing
CLOSED: [2022-02-05 za 05:19]
:LOGBOOK:
- State "DONE"       from "TODO"       [2022-02-05 za 05:19]
:END:
Decided to use the light mode of [[https://themes.gohugo.io/themes/hugo-theme-hello-friend/][hello-friend]]. No customization for the first 10
articles unless absolutely necessary. 

* PASSED DRILL --> Drills made
:LOGBOOK:
- State "PASSED"     from "TODO"       [2022-02-05 za 05:19]
:END:
